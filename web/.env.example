# This file provides an example of the environment variables needed for the application.
# Copy this file to .env and fill in the values.
# Youtubera web app environment example
# Copy to .env and fill values

# PostgreSQL connection string
DATABASE_URL="postgresql://postgres:password@localhost:5432/youtubera_w?schema=public"

# Session secrets (set in production)
SESSION_SECRET="dev-secret-change-me"

# AI
GEMINI_MODEL="gemini-1.5-flash-latest"
GEMINI_API_KEY=""

# External APIs (segmentation can use YouTube chapters or manual paste)
# YOUTUBE_API_KEY is REQUIRED for chapter-based segmentation (no yt-dlp fallback for chapters)
YOUTUBE_API_KEY=""

# Adobe PDF Services (for PDF text extraction via Extract API)
# Obtain credentials from https://developer.adobe.com/document-services/apis/pdf-services/ and set both values
PDF_SERVICES_CLIENT_ID=""
PDF_SERVICES_CLIENT_SECRET=""

# Preferred transcript languages for YouTube (optional; used only if transcript features are enabled)
YT_TRANSCRIPT_LANGS="en,en-US,en-GB"

# OAuth providers
GITHUB_CLIENT_ID=""
GITHUB_CLIENT_SECRET=""
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""

# Redis
REDIS_URL="redis://localhost:6379"
# Video processing (optional: set if yt-dlp/ffmpeg are not on PATH)
# Example (Windows):
# YTDLP_PATH="C:\Tools\yt-dlp.exe"
# FFMPEG_PATH="C:\ffmpeg\bin\ffmpeg.exe"
# Example (Linux/Mac):
# YTDLP_PATH="/usr/local/bin/yt-dlp"
# FFMPEG_PATH="/usr/local/bin/ffmpeg"
YTDLP_PATH=""
FFMPEG_PATH=""

# Optional: Specify the YouTube client to use for yt-dlp (e.g., web, web_embedded, android)
YTDLP_YOUTUBE_CLIENT=""

# Optional: If YouTube returns 403 for fragments or requires auth, provide a cookies.txt file path
# You can export cookies from your browser as Netscape cookies.txt and point to it here
# Example (Windows):
# YTDLP_COOKIES_FILE="C:\Users\you\cookies.txt"
YTDLP_COOKIES_FILE=""

# Optional: Use cookies directly from a local browser profile (yt-dlp supports: chrome, edge, firefox, brave, etc.)
# Example (Windows):
# YTDLP_COOKIES_FROM_BROWSER="edge"
YTDLP_COOKIES_FROM_BROWSER=""

# Optional: Timeout for yt-dlp downloads in milliseconds (prevents the Generate action from hanging)
# Example: 90000 (90 seconds)
YTDLP_TIMEOUT_MS="90000"

# Directory to copy generated short clips and thumbnails to (optional)
# If set, each generated clip will be exported here in addition to the web/public folder
# All three variables below are supported. Set one.
short_export_dir=""
SHORT_EXPORT_DIR=""
SHORTS_EXPORT_DIR=""
# Example (Windows):
# SHORTS_EXPORT_DIR="C:\Users\Ansh\Videos\Youtubera"

## Markdown Formatter
# Deterministic backend formatter only (no AI). Optional style learning from a sample PDF.

# Optional: sample PDF for formatter style learning (absolute or relative path)
# Example (repo root file): "../React_EP3.pdf" when the web app runs with cwd at web/
# If set, the backend formatter will infer heading/blockquote/code styles from this PDF
FORMATTER_STYLE_SAMPLE_PDF=""

# OSS OpenAI-compatible LLM (optional; only if you enable offline AI segmentation)
# OSS_OPENAI_BASE_URL="http://localhost:11434" # e.g., Ollama or OpenWebUI
# OSS_OPENAI_API_KEY="" # optional for local
# OSS_OPENAI_MODEL="llama3.1"